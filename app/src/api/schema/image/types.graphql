
type ImageFiles {
    fullscreen: String
    fullscreen2x: String
    lowResolutionPlaceholder: String
    source: String
    thumbnail: String
    thumbnail2x: String
    thumbnailLarge: String
    thumbnailLarge2x: String
}

type ImageMetaData {
    height: Int
    name: String
    type: String
    width: Int
}

type Image implements Paginatable {
    edges: [Edge]
    files: ImageFiles
    metaData: ImageMetaData
    pageInfo: PageInfo
}

type AddImageResponse implements MutationResult {
    error: String
    image: Image
    result: Boolean
}

type RemoveImageResponse implements MutationResult {
    error: String
    image: Image
    result: Boolean
}

type UpdateImageResponse implements MutationResult {
    error: String
    image: Image
    previousImage: Image
    result: Boolean
}

input ImageInput {
    dataUrl: String!
    name: String
    size: Int
    mimeType: String
}

type Query {
    image(hash: String!): Image
    images(first: Int, after: String): [Image]
}

type Mutation {
    addImage(image: ImageInput!): AddImageResponse
    addImages(images: [ImageInput]): [AddImageResponse]
    removeImage(hash: String!): RemoveImageResponse
    removeImages(hashes: [String]): [RemoveImageResponse]
    updateImage(hash: String!, image: ImageInput!): UpdateImageResponse
    updateImages(hashes: [String], images: [ImageInput]): [UpdateImageResponse]
}
