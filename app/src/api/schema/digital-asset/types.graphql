type DigitalAsset {
    contract: String
    images: [String]
    name: String
}

type DigitalAssetToken {
    asset: DigitalAsset
    description: String
    feeAverage: String
    feeFast: String
    feeSafeLow: String
    id: String
    image: String
    name: String
}

type AddDigitalAssetResponse {
    digitalAsset: DigitalAsset
    result: Boolean
}

type SendDigitalAssetResponse {
    result: Boolean
    transactionHash: String
}

type Query {
    digitalAsset(contract: String!): [DigitalAssetToken]
    digitalAssetByAccount(contract: String!, address: String!): [DigitalAssetToken]
    digitalAssets: [DigitalAsset]
    digitalAssetsByAccount(address: String!): [DigitalAsset]
}

type Mutation {
    addDigitalAsset(contract: String!): AddDigitalAssetResponse
    sendDigitalAsset(contract: String!, token: String!, to: String!, fee: String!): SendDigitalAssetResponse
}