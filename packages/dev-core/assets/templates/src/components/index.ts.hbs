{{> components:imports}}

interface I{{name}}Props {}

interface I{{name}}State {}

type {{name}}Props = I{{name}}Props & WithStyles;

class {{name}} extends Component<{{name}}Props, I{{name}}State> {

    public render() {
        const { launcher, launcherVisible } = this.props.classes;

        // TODO: launcher animation: hide sidenav, fade in from bottom

        return (
            <div
                className={classNames(
                    launcher,
                    {
                        [launcherVisible]: isVisible,
                    },
                )}
            >
                {{name}}
            </div>
        );
    }

}

const style: StyleRules = {
    launcher: {
        height: '100%',
        margin: 0,
        padding: 0,
        transform: 'translateX(-102%)',
        transition: 'transform .3s ease-out',
        width: '100%',
        willChange: 'transform',
    },
    launcherVisible: {
        transform: 'none',
    },
};

export default withStyles(style)({{name}}) as ComponentType<I{{name}}Props>;
